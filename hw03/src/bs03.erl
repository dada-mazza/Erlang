-module(bs03).-export([split/2]).split(BinText, Delimiter) -> 	split(BinText, list_to_binary(Delimiter), byte_size(list_to_binary(Delimiter)), <<>>, []).split(BinText, Delimiter, Delimiter_size, Acc1, Acc2)	when byte_size(BinText) >= Delimiter_size ->	<<D:Delimiter_size/binary, Rest/binary>> = BinText,	if(D =:= Delimiter) ->		split(Rest, Delimiter, Delimiter_size, <<>>, [Acc1|Acc2]); 	true ->		<<S, RestS/binary>> = BinText,		split(RestS, Delimiter, Delimiter_size, <<Acc1/binary, S>>, Acc2)	end;split(BinText, _, _, Acc1, Acc2) ->	lists:reverse([<<Acc1/binary, BinText/binary>>|Acc2]).-ifdef(TEST).-include_lib("eunit/include/eunit.hrl").split_test_() -> [	?_assert(split(<<"Col1-:-Col2-:-Col3-:-Col4-:-Col5">>, "-:-") 				=:= [<<"Col1">>, <<"Col2">>, <<"Col3">>, <<"Col4">>, <<"Col5">>]),	?_assert(split(<<"-:-">>, "-:-") 				=:= [<<"">>, <<"">>]),	?_assert(split(<<"-:-Col2-:-Col3-:-Col4-:-">>, "-:-") 				=:= [<<"">>, <<"Col2">>, <<"Col3">>, <<"Col4">>, <<"">>])	].-endif.% BS03: Разделить строку на части, с явным указанием разделителя:% Пример:% 1> BinText = <<"Col1-:-Col2-:-Col3-:-Col4-:-Col5">>.% <<"Col1-:-Col2-:-Col3-:-Col4-:-Col5">>% 2> bs03:split(BinText, "-:-").% [<<"Col1">>, <<"Col2">>, <<"Col3">>, <<"Col4">>, <<"Col5">>]