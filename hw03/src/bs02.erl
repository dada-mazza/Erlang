-module(bs02).-export([words/1]).words(BinText) -> words(BinText, <<>>, []).words(<<" ", Rest/binary>>, Acc1, Acc2)  -> words(Rest, <<>>, [Acc1|Acc2]);words(<<S, Rest/binary>>, Acc1, Acc2)    -> words(Rest, <<Acc1/binary, S>>, Acc2);words(<<>>, Acc1, Acc2)                  -> lists:reverse([Acc1|Acc2]).-ifdef(TEST).-include_lib("eunit/include/eunit.hrl").words_test_() -> [	?_assert(words(<<"Text with four words">>) =:= [<<"Text">>, <<"with">>, <<"four">>, <<"words">>]),	?_assertNot(words(<<"Text with four words">>) =:= [<<"Text">>]),    ?_assert(words(<<"Text with four words">>) =/= [<<"Text">>])	].-endif.% BS02: Разделить строку на слова:% Пример:% 1> BinText = <<"Text with four words">>.% <<"Text with four words">>% 2> bs02:words(BinText).% [<<"Text">>, <<"with">>, <<"four">>, <<"words">>]